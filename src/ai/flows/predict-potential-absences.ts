// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Predicts potential absences based on historical data.
 *
 * - predictPotentialAbsences - Predicts potential absences.
 * - PredictPotentialAbsencesInput - The input type for the predictPotentialAbsences function.
 * - PredictPotentialAbsencesOutput - The return type for the predictPotentialAbsences function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PredictPotentialAbsencesInputSchema = z.object({
  historicalData: z
    .string()
    .describe('Historical attendance data for users, as a CSV string.'),
  dateRange: z.string().describe('The date range to predict absences for.'),
});
export type PredictPotentialAbsencesInput = z.infer<
  typeof PredictPotentialAbsencesInputSchema
>;

const PredictPotentialAbsencesOutputSchema = z.object({
  predictedAbsences: z
    .string()
    .describe(
      'A list of predicted absences for each user, as a JSON string. The keys are user identifiers and the values are lists of dates on which the user is predicted to be absent.'
    ),
  confidenceReport: z
    .string()
    .describe(
      'A report on the confidence level of the predictions, as a JSON string. The keys are user identifiers and the values are confidence scores between 0 and 1.'
    ),
});
export type PredictPotentialAbsencesOutput = z.infer<
  typeof PredictPotentialAbsencesOutputSchema
>;

export async function predictPotentialAbsences(
  input: PredictPotentialAbsencesInput
): Promise<PredictPotentialAbsencesOutput> {
  return predictPotentialAbsencesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'predictPotentialAbsencesPrompt',
  input: {schema: PredictPotentialAbsencesInputSchema},
  output: {schema: PredictPotentialAbsencesOutputSchema},
  prompt: `You are an AI attendance predictor.

You will be provided with historical attendance data and a date range.

You will predict potential absences for each user in the date range, based on the historical data.

The historical attendance data will be in CSV format.

The output should be a JSON string of predicted absences for each user, and a JSON string of confidence levels for each user.

Historical Data:
{{{historicalData}}}

Date Range:
{{{dateRange}}}

Output:
`,
});

const predictPotentialAbsencesFlow = ai.defineFlow(
  {
    name: 'predictPotentialAbsencesFlow',
    inputSchema: PredictPotentialAbsencesInputSchema,
    outputSchema: PredictPotentialAbsencesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
